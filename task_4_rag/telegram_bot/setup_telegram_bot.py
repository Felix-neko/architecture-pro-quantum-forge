#!/usr/bin/env python3
"""
set_webhook.py

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook:
  python set_webhook.py https://a1b2c3d4.ngrok.io

  # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º –∏ –ø—É—Ç—ë–º:
  python set_webhook.py https://a1b2c3d4.ngrok.io --token 12345:ABCDEF --path /webhook

  # –£–¥–∞–ª–∏—Ç—å webhook:
  python set_webhook.py --delete
"""

import os
import sys
import argparse
import httpx
from dotenv import load_dotenv

load_dotenv()


def parse_args():
    p = argparse.ArgumentParser(description="–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ Telegram webhook —á–µ—Ä–µ–∑ ngrok URL.")
    p.add_argument(
        "ngrok_url", nargs="?", help="ngrok public URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://a1b2c3d4.ngrok.io). –ù–µ –Ω—É–∂–µ–Ω –ø—Ä–∏ --delete."
    )
    p.add_argument("--token", "-t", help="Telegram BOT —Ç–æ–∫–µ–Ω. –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±–µ—Ä—ë—Ç—Å—è –∏–∑ .env (BOT_TOKEN).")
    p.add_argument(
        "--path",
        "-p",
        default=os.getenv("WEBHOOK_PATH", "/webhook"),
        help="–ü—É—Ç—å webhook (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /webhook –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ .env).",
    )
    p.add_argument("--delete", "-d", action="store_true", help="–£–¥–∞–ª–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π webhook.")
    p.add_argument("--timeout", type=float, default=10.0, help="HTTP timeout (—Å–µ–∫).")
    return p.parse_args()


def ensure_https(url: str) -> str:
    if not (url.startswith("http://") or url.startswith("https://")):
        raise ValueError("URL –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://")
    if url.startswith("http://"):
        raise ValueError("Telegram —Ç—Ä–µ–±—É–µ—Ç HTTPS –¥–ª—è webhook URL.")
    return url.rstrip("/")


def main():
    args = parse_args()
    token = args.token or os.getenv("BOT_TOKEN")

    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: –Ω–µ –∑–∞–¥–∞–Ω BOT_TOKEN. –ü–µ—Ä–µ–¥–∞–π—Ç–µ --token –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env", file=sys.stderr)
        sys.exit(2)

    api_base = f"https://api.telegram.org/bot{token}"

    if args.delete:
        # –£–¥–∞–ª—è–µ–º webhook
        print("üßπ –£–¥–∞–ª—è–µ–º webhook...")
        try:
            r = httpx.post(f"{api_base}/deleteWebhook", timeout=args.timeout)
            r.raise_for_status()
            data = r.json()
            if data.get("ok"):
                print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook:", data)
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Telegram API:", e, file=sys.stderr)
            sys.exit(1)
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    if not args.ngrok_url:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω ngrok_url. –ü—Ä–∏–º–µ—Ä: python set_webhook.py https://a1b2c3d4.ngrok.io", file=sys.stderr)
        sys.exit(2)

    try:
        base = ensure_https(args.ngrok_url)
    except ValueError as e:
        print("–û—à–∏–±–∫–∞:", e, file=sys.stderr)
        sys.exit(2)

    path = args.path if args.path.startswith("/") else f"/{args.path}"
    webhook_url = f"{base}{path}"

    print(f"üîó –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {webhook_url}")
    try:
        r = httpx.post(f"{api_base}/setWebhook", params={"url": webhook_url}, timeout=args.timeout)
        r.raise_for_status()
        data = r.json()
        if data.get("ok"):
            print("‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", data)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook:", e, file=sys.stderr)
        sys.exit(1)


if __name__ == "__main__":
    main()
